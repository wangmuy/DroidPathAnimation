import java.text.SimpleDateFormat
import java.util.regex.Pattern

def getSvnRevision() {
    new ByteArrayOutputStream().withStream { os ->
        def result = exec {
            executable = 'svn'
            args = ['info']
            standardOutput = os
        }
        def outputAsString = os.toString()
        def matchLastChangedRev = outputAsString =~ /Last Changed Rev: (\d+)/

        ext.svnRev = "${matchLastChangedRev[0][1]}".toInteger()
    }
    return svnRev
}

def getVersionCodeFromManifest() {
    def manifestFile = file("AndroidManifest.xml")
    def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcher = pattern.matcher(manifestText)
    matcher.find()
    def version = Integer.parseInt(matcher.group(1))
    return version
}

def getUpdatedRevision() {
    def revision = 1;
    try {
        revision = getSvnRevision()
    } catch (Exception e) {
        println("Not a SVN repo")
        revision = getVersionCodeFromManifest()
    }
    println("Updated versionCode = " + revision)
    return revision
}

def getBuildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmm")
    // df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
    // to long: Long.valueOf(getBuildTime().toString())
}

buildscript {
    repositories {
        //flatDir { dirs "gradle" }
        if(!"true".equals(System.getenv("TRAVIS")))
            mavenCentral()
        else maven { url 'http://maven.oschina.net/content/groups/public/' }
        //mavenCentral()
        //mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}
apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    defaultConfig {
        versionCode = getUpdatedRevision()
    }

    //compileOptions {
    //    sourceCompatibility JavaVersion.VERSION_1_7
    //    targetCompatibility JavaVersion.VERSION_1_7
    //}

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}
